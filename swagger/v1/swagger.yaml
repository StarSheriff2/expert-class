---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/v1/cities":
    get:
      summary: returns a list of all cities
      tags:
      - Cities
      responses:
        '200':
          description: success
          content:
            application/json:
              example:
              - id: 1
                name: Berlin
                created_at: '2021-12-09T04:21:59.858Z'
                updated_at: '2021-12-09T04:21:59.858Z'
              - id: 2
                name: Singapore
                created_at: '2021-12-09T04:21:59.860Z'
                updated_at: '2021-12-09T04:21:59.860Z'
              - id: 3
                name: Guatemala City
                created_at: '2021-12-09T04:21:59.860Z'
                updated_at: '2021-12-09T04:21:59.860Z'
              - id: 4
                name: Gaborone
                created_at: '2021-12-09T04:21:59.861Z'
                updated_at: '2021-12-09T04:21:59.861Z'
              - id: 5
                name: Ottawa
                created_at: '2021-12-09T04:21:59.861Z'
                updated_at: '2021-12-09T04:21:59.861Z'
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    created_at:
                      type: string
                    updated_at:
                      type: string
                  required:
                  - id
                  - name
                  - created_at
                  - updated_at
  "/api/v1/courses":
    get:
      summary: returns list with all courses
      tags:
      - Courses
      responses:
        '200':
          description: success
          content:
            application/json:
              example:
              - id: 1
                title: Painting
                description: Itaque quia culpa. Itaque eum aut. Libero cumque enim.
                instructor: The Hon. Tona Cole
                duration: 11
                created_at: '2021-12-09T04:21:59.912Z'
                updated_at: '2021-12-09T04:21:59.917Z'
                course_image_url: https://res.cloudinary.com/starsheriff/image/upload/ypc9hp2706.jpeg
              - id: 2
                title: Kayaking
                description: Inventore ut voluptas. Enim at cum. Voluptas labore consectetur.
                instructor: Cassandra Mann
                duration: 10
                created_at: '2021-12-09T04:21:59.924Z'
                updated_at: '2021-12-09T04:21:59.928Z'
                course_image_url: https://res.cloudinary.com/starsheriff/image/upload/mo9rp8y5ff.jpeg
              - id: 3
                title: Dance
                description: Reiciendis asperiores officia. Qui consequuntur qui.
                  Dolorum sed aut.
                instructor: Dr. Hosea Murazik
                duration: 3
                created_at: '2021-12-09T04:21:59.934Z'
                updated_at: '2021-12-09T04:21:59.936Z'
                course_image_url: https://res.cloudinary.com/starsheriff/image/upload/v1icswantk.jpeg
              - id: 4
                title: Cabaret
                description: Animi dolores magnam. Aut aliquam suscipit. Aut tempora
                  et.
                instructor: Gov. Zachery Russel
                duration: 10
                created_at: '2021-12-09T04:21:59.941Z'
                updated_at: '2021-12-09T04:21:59.944Z'
                course_image_url: https://res.cloudinary.com/starsheriff/image/upload/7hjjtxnk9a.jpeg
              - id: 5
                title: Sports
                description: Suscipit ea voluptatem. Non alias excepturi. Odio corrupti
                  rem.
                instructor: Gov. Robbi Fahey
                duration: 6
                created_at: '2021-12-09T04:21:59.953Z'
                updated_at: '2021-12-09T04:21:59.956Z'
                course_image_url: https://res.cloudinary.com/starsheriff/image/upload/n43zuh54jw.jpeg
              schema:
                type: array
  "/api/v1/sign_in":
    post:
      summary: creates a new session
      tags:
      - Sessions
      parameters: []
      responses:
        '200':
          description: success
          content:
            application/json:
              examples:
                when user exists:
                  value:
                    status: created
                    logged_in: true
                    user:
                      id: 3
                      username: 17dm3hyrg9
                      name: Alissa
                      created_at: '2021-12-09T04:21:59.999Z'
                      updated_at: '2021-12-09T04:21:59.999Z'
                when user does not exist:
                  value:
                    status: 401
              schema:
                type: object
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
              required:
              - username
  "/api/v1/signed_in":
    get:
      summary: return login status of user
      tags:
      - Sessions
      responses:
        '200':
          description: success
          content:
            application/json:
              examples:
                when user is logged in:
                  value:
                    logged_in: true
                    user:
                      id: 13
                      username: pqbl79q0kx
                      name: Forest
                      created_at: '2021-12-09T04:22:00.055Z'
                      updated_at: '2021-12-09T04:22:00.055Z'
                when user is not logged in:
                  value:
                    logged_in: false
              schema:
                type: object
                properties:
                  logged_in:
                    type: boolean
                required:
                - logged_in
  "/api/v1/sign_out":
    delete:
      summary: return logged-out status of user as true
      tags:
      - Sessions
      responses:
        '200':
          description: success
          content:
            application/json:
              example:
                status: 200
                logged_out: true
              schema:
                type: object
                properties:
                  status:
                    type: integer
                  logged_out:
                    type: boolean
                required:
                - status
                - logged_out
  "/api/v1/users":
    post:
      summary: creates a new user
      tags:
      - Users
      parameters: []
      responses:
        '200':
          description: success
          content:
            application/json:
              examples:
                when user exists:
                  value:
                    status: created
                    logged_in: true
                    user:
                      id: 31
                      username: urg0xid98g
                      name: Cleveland
                      created_at: '2021-12-09T04:22:00.112Z'
                      updated_at: '2021-12-09T04:22:00.112Z'
                when user does not exist:
                  value:
                    status: 401
                    error: This username already exists. Please Choose another one.
              schema:
                type: object
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                username:
                  type: string
              required:
              - name
              - username
servers:
- url: https://{defaultHost}
  variables:
    defaultHost:
      default: www.example.com
