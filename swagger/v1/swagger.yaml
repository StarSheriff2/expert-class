---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/v1/cities":
    get:
      summary: returns a list of all cities
      tags:
      - Cities
      responses:
        '200':
          description: success
          content:
            application/json:
              example:
              - id: 1
                name: Tashkent
                created_at: '2021-12-09T21:22:07.595Z'
                updated_at: '2021-12-09T21:22:07.595Z'
              - id: 2
                name: Tripoli
                created_at: '2021-12-09T21:22:07.597Z'
                updated_at: '2021-12-09T21:22:07.597Z'
              - id: 3
                name: Bamako
                created_at: '2021-12-09T21:22:07.597Z'
                updated_at: '2021-12-09T21:22:07.597Z'
              - id: 4
                name: Port Louis
                created_at: '2021-12-09T21:22:07.598Z'
                updated_at: '2021-12-09T21:22:07.598Z'
              - id: 5
                name: San Salvador
                created_at: '2021-12-09T21:22:07.598Z'
                updated_at: '2021-12-09T21:22:07.598Z'
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    created_at:
                      type: string
                    updated_at:
                      type: string
                  required:
                  - id
                  - name
                  - created_at
                  - updated_at
  "/api/v1/courses":
    get:
      summary: returns list with all courses
      tags:
      - Courses
      responses:
        '200':
          description: success
          content:
            application/json:
              example:
              - id: 1
                title: Reading
                description: Aut omnis omnis. Atque voluptatem dolorum. Cumque illum
                  impedit.
                instructor: Sparkle Quitzon
                duration: 5
                created_at: '2021-12-09T21:22:07.650Z'
                updated_at: '2021-12-09T21:22:07.655Z'
                course_image_url: https://res.cloudinary.com/starsheriff/image/upload/13w2ev6u5l.jpeg
              - id: 2
                title: Shopping
                description: Velit dolor minus. Consectetur vel doloribus. Vero sit
                  et.
                instructor: Lanny Parker
                duration: 11
                created_at: '2021-12-09T21:22:07.660Z'
                updated_at: '2021-12-09T21:22:07.663Z'
                course_image_url: https://res.cloudinary.com/starsheriff/image/upload/s3x2y5d41z.jpeg
              - id: 3
                title: Creative writing
                description: Inventore odio sapiente. Esse qui vero. Veniam atque
                  et.
                instructor: Jc Jast
                duration: 6
                created_at: '2021-12-09T21:22:07.667Z'
                updated_at: '2021-12-09T21:22:07.670Z'
                course_image_url: https://res.cloudinary.com/starsheriff/image/upload/fdpady0web.jpeg
              - id: 4
                title: scrapbook
                description: Laudantium quis nihil. Dolores debitis veritatis. Rerum
                  itaque omnis.
                instructor: Ariane Runte MD
                duration: 6
                created_at: '2021-12-09T21:22:07.674Z'
                updated_at: '2021-12-09T21:22:07.676Z'
                course_image_url: https://res.cloudinary.com/starsheriff/image/upload/1mhdx9g9rk.jpeg
              - id: 5
                title: Sand art
                description: Officia facilis et. Et quam reprehenderit. Eveniet pariatur
                  autem.
                instructor: Clifton Grimes
                duration: 3
                created_at: '2021-12-09T21:22:07.681Z'
                updated_at: '2021-12-09T21:22:07.689Z'
                course_image_url: https://res.cloudinary.com/starsheriff/image/upload/z2cwlahc4w.jpeg
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    title:
                      type: string
                    description:
                      type: string
                    instructor:
                      type: string
                    duration:
                      type: integer
                    created_at:
                      type: string
                    updated_at:
                      type: string
                    course_image_url:
                      type: string
                  required:
                  - id
                  - title
                  - description
                  - instructor
                  - duration
                  - created_at
                  - updated_at
                  - course_image_url
                required: true
    post:
      summary: creates a new course
      tags:
      - Courses
      parameters: []
      responses:
        '200':
          description: success
          content:
            application/json:
              example:
                message: Course successfully created
                status: created
                course:
                  id: 16
                  title: Web Development
                  description: Learn to build websites.
                  instructor: Mike Milano
                  duration: 12
                  created_at: '2021-12-09T21:22:07.868Z'
                  updated_at: '2021-12-09T21:22:07.870Z'
                  course_image_url: https://res.cloudinary.com/starsheriff/image/upload/biypv4og1i.jpeg
              schema:
                type: object
                properties:
                  course:
                    type: object
                  message:
                    type: string
                  status:
                    type: string
                required:
                - course
                - message
                - status
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                instructor:
                  type: string
                duration:
                  type: integer
                image:
                  type: binary
              required:
              - title
              - description
              - instructor
              - duration
              - image
        required: true
  "/api/v1/courses/{id}":
    get:
      summary: returns details for one course
      tags:
      - Courses
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: success
          content:
            application/json:
              example:
                id: 6
                title: Flying disc
                description: Id et et. Placeat ullam dolorem. Rerum sunt veritatis.
                instructor: Carey Dickens
                duration: 2
                created_at: '2021-12-09T21:22:07.763Z'
                updated_at: '2021-12-09T21:22:07.766Z'
                course_image_url: https://res.cloudinary.com/starsheriff/image/upload/o7z52mdtvm.jpeg
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  description:
                    type: string
                  instructor:
                    type: string
                  duration:
                    type: integer
                  created_at:
                    type: string
                  updated_at:
                    type: string
                  course_image_url:
                    type: string
                required:
                - id
                - title
                - description
                - instructor
                - duration
                - created_at
                - updated_at
                - course_image_url
    delete:
      summary: deletes a course
      tags:
      - Courses
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: success
          content:
            application/json:
              example:
                course:
                  id: 17
                  title: Reading
                  description: Amet exercitationem voluptatum. Qui aut non. Id reprehenderit
                    quia.
                  instructor: Mora Jenkins II
                  duration: 7
                  created_at: '2021-12-09T21:22:07.880Z'
                  updated_at: '2021-12-09T21:22:07.883Z'
                  course_image_url: https://res.cloudinary.com/starsheriff/image/upload/phxeveoutq.jpeg
                message: Course successfully deleted
                status: 200
              schema:
                type: object
                properties:
                  course:
                    type: object
                  message:
                    type: string
                  status:
                    type: integer
                required:
                - course
                - message
                - status
        '404':
          description: success
          content:
            application/json:
              example:
                message: Couldn't find Course with 'id'=1022
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                - message
  "/api/v1/reservations":
    get:
      summary: returns list with all reservations
      tags:
      - Reservations
      responses:
        '200':
          description: success
          content:
            application/json:
              example:
              - user: Georgina
                course: Scouting
                city: Budapest
                date: '2022-10-01'
                id: 1
                created_at: '2021-12-09T21:22:07.998Z'
                updated_at: '2021-12-09T21:22:07.998Z'
              - user: Georgina
                course: Roller skating
                city: Bujumbura
                date: '2022-05-05'
                id: 2
                created_at: '2021-12-09T21:22:08.008Z'
                updated_at: '2021-12-09T21:22:08.008Z'
              - user: Georgina
                course: Pottery
                city: Tbilisi
                date: '2022-10-04'
                id: 3
                created_at: '2021-12-09T21:22:08.016Z'
                updated_at: '2021-12-09T21:22:08.016Z'
              - user: Georgina
                course: Genealogy
                city: Bujumbura
                date: '2022-11-30'
                id: 4
                created_at: '2021-12-09T21:22:08.024Z'
                updated_at: '2021-12-09T21:22:08.024Z'
              - user: Georgina
                course: Gambling
                city: Kuwait City
                date: '2022-08-28'
                id: 5
                created_at: '2021-12-09T21:22:08.032Z'
                updated_at: '2021-12-09T21:22:08.032Z'
              schema:
                type: array
                items:
                  type: object
                  properties:
                    user:
                      type: string
                    course:
                      type: string
                    city:
                      type: string
                    date:
                      type: string
                    id:
                      type: integer
                    created_at:
                      type: string
                    updated_at:
                      type: string
                  required:
                  - user
                  - course
                  - city
                  - date
                  - id
                  - created_at
                  - updated_at
                required: true
    post:
      summary: creates a new course
      tags:
      - Reservations
      parameters: []
      responses:
        '200':
          description: success
          content:
            application/json:
              example:
                reservation:
                  user: Lillian
                  course: Slacklining
                  city: Tripoli
                  date: '2021-12-10'
                  id: 11
                  created_at: '2021-12-09T21:22:08.247Z'
                  updated_at: '2021-12-09T21:22:08.247Z'
                message: Reservation created successfully
                status: 200
              schema:
                type: object
                properties:
                  reservation:
                    type: object
                    properties:
                      user:
                        type: string
                      course:
                        type: string
                      city:
                        type: string
                      date:
                        type: string
                      id:
                        type: integer
                      created_at:
                        type: string
                      updated_at:
                        type: string
                    required:
                    - user
                    - course
                    - city
                    - date
                    - id
                    - created_at
                    - updated_at
                  message:
                    type: string
                  status:
                    type: integer
                required:
                - reservation
                - message
                - status
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                date:
                  type: string
                user_id:
                  type: integer
                course_id:
                  type: integer
                city_id:
                  type: integer
              required:
              - date
              - user_id
              - course_id
              - city_id
        required: true
  "/api/v1/reservations/{id}":
    delete:
      summary: deletes a reservation
      tags:
      - Reservations
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: success
          content:
            application/json:
              example:
                reservation:
                  id: 16
                  date: '2022-03-07'
                  user_id: 17
                  course_id: 61
                  created_at: '2021-12-09T21:22:08.301Z'
                  updated_at: '2021-12-09T21:22:08.301Z'
                  city_id: 30
                message: Reservation deleted successfully
              schema:
                type: object
                properties:
                  reservation:
                    type: object
                    properties:
                      user_id:
                        type: integer
                      course_id:
                        type: integer
                      city_id:
                        type: integer
                      date:
                        type: string
                      id:
                        type: integer
                      created_at:
                        type: string
                      updated_at:
                        type: string
                    required:
                    - user_id
                    - course_id
                    - city_id
                    - date
                    - id
                    - created_at
                    - updated_at
                  message:
                    type: string
                required:
                - reservation
                - message
        '404':
          description: success
          content:
            application/json:
              example:
                message: Couldn't find Reservation with 'id'=1021
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                - message
  "/api/v1/sign_in":
    post:
      summary: creates a new session
      tags:
      - Sessions
      parameters: []
      responses:
        '200':
          description: success
          content:
            application/json:
              examples:
                when user exists:
                  value:
                    status: created
                    logged_in: true
                    user:
                      id: 27
                      username: kily1o7jbe
                      name: Cleveland
                      created_at: '2021-12-09T21:22:08.527Z'
                      updated_at: '2021-12-09T21:22:08.527Z'
                when user does not exist:
                  value:
                    status: 401
              schema:
                type: object
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
              required:
              - username
        required: true
  "/api/v1/signed_in":
    get:
      summary: return login status of user
      tags:
      - Sessions
      responses:
        '200':
          description: success
          content:
            application/json:
              examples:
                when user is logged in:
                  value:
                    logged_in: true
                    user:
                      id: 37
                      username: fso89j2ush
                      name: Soraya
                      created_at: '2021-12-09T21:22:08.553Z'
                      updated_at: '2021-12-09T21:22:08.553Z'
                when user is not logged in:
                  value:
                    logged_in: false
              schema:
                type: object
                properties:
                  logged_in:
                    type: boolean
                required:
                - logged_in
  "/api/v1/sign_out":
    delete:
      summary: return logged-out status of user as true
      tags:
      - Sessions
      responses:
        '200':
          description: success
          content:
            application/json:
              example:
                status: 200
                logged_out: true
              schema:
                type: object
                properties:
                  status:
                    type: integer
                  logged_out:
                    type: boolean
                required:
                - status
                - logged_out
  "/api/v1/users":
    post:
      summary: creates a new user
      tags:
      - Users
      parameters: []
      responses:
        '200':
          description: success
          content:
            application/json:
              examples:
                when user exists:
                  value:
                    status: created
                    logged_in: true
                    user:
                      id: 55
                      username: sphrq0xyl7
                      name: Waldo
                      created_at: '2021-12-09T21:22:08.613Z'
                      updated_at: '2021-12-09T21:22:08.613Z'
                when user does not exist:
                  value:
                    status: 401
                    error: This username already exists. Please Choose another one.
              schema:
                type: object
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                username:
                  type: string
              required:
              - name
              - username
        required: true
servers:
- url: https://{defaultHost}
  variables:
    defaultHost:
      default: www.example.com
