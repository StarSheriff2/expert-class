---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/v1/cities":
    get:
      summary: returns a list of all cities
      tags:
      - Cities
      responses:
        '200':
          description: success
          content:
            application/json:
              example:
              - id: 1
                name: Phnom Penh
                created_at: '2021-12-09T06:09:47.567Z'
                updated_at: '2021-12-09T06:09:47.567Z'
              - id: 2
                name: Bandar Seri Begawan
                created_at: '2021-12-09T06:09:47.569Z'
                updated_at: '2021-12-09T06:09:47.569Z'
              - id: 3
                name: Bandar Seri Begawan
                created_at: '2021-12-09T06:09:47.569Z'
                updated_at: '2021-12-09T06:09:47.569Z'
              - id: 4
                name: Quito
                created_at: '2021-12-09T06:09:47.570Z'
                updated_at: '2021-12-09T06:09:47.570Z'
              - id: 5
                name: Maseru
                created_at: '2021-12-09T06:09:47.570Z'
                updated_at: '2021-12-09T06:09:47.570Z'
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    created_at:
                      type: string
                    updated_at:
                      type: string
                  required:
                  - id
                  - name
                  - created_at
                  - updated_at
  "/api/v1/courses":
    get:
      summary: returns list with all courses
      tags:
      - Courses
      responses:
        '200':
          description: success
          content:
            application/json:
              example:
              - id: 1
                title: Genealogy
                description: Temporibus ducimus illo. Voluptatem et sit. Sed quo ea.
                instructor: Meridith Block
                duration: 6
                created_at: '2021-12-09T06:09:47.617Z'
                updated_at: '2021-12-09T06:09:47.623Z'
                course_image_url: https://res.cloudinary.com/starsheriff/image/upload/wyuwnz4fzr.jpeg
              - id: 2
                title: Board games
                description: A repellat natus. Voluptas laborum omnis. Mollitia sed
                  enim.
                instructor: Booker Daniel V
                duration: 4
                created_at: '2021-12-09T06:09:47.629Z'
                updated_at: '2021-12-09T06:09:47.631Z'
                course_image_url: https://res.cloudinary.com/starsheriff/image/upload/5mf3wpfrjy.jpeg
              - id: 3
                title: Swimming
                description: Ut qui quia. Laborum facilis quod. Eius dolores quia.
                instructor: Ed Kuhic
                duration: 4
                created_at: '2021-12-09T06:09:47.636Z'
                updated_at: '2021-12-09T06:09:47.639Z'
                course_image_url: https://res.cloudinary.com/starsheriff/image/upload/i75evrk3av.jpeg
              - id: 4
                title: Painting
                description: Cumque quis vitae. Labore sit deleniti. Aliquam tenetur
                  voluptatem.
                instructor: Houston Flatley
                duration: 5
                created_at: '2021-12-09T06:09:47.643Z'
                updated_at: '2021-12-09T06:09:47.645Z'
                course_image_url: https://res.cloudinary.com/starsheriff/image/upload/armdnzhbwm.jpeg
              - id: 5
                title: Flag Football
                description: Incidunt aut quo. Quia commodi odit. Possimus sed deleniti.
                instructor: Robin Schumm
                duration: 0
                created_at: '2021-12-09T06:09:47.650Z'
                updated_at: '2021-12-09T06:09:47.652Z'
                course_image_url: https://res.cloudinary.com/starsheriff/image/upload/n7nah90e21.jpeg
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    title:
                      type: string
                    description:
                      type: string
                    instructor:
                      type: string
                    duration:
                      type: integer
                    created_at:
                      type: string
                    updated_at:
                      type: string
                    course_image_url:
                      type: string
                  required:
                  - id
                  - title
                  - description
                  - instructor
                  - duration
                  - created_at
                  - updated_at
                  - course_image_url
                required: true
    post:
      summary: creates a new course
      tags:
      - Courses
      parameters: []
      responses:
        '200':
          description: success
          content:
            application/json:
              example:
                message: Course successfully created
                status: created
                course:
                  id: 16
                  title: Web Development
                  description: Learn to build websites.
                  instructor: Mike Milano
                  duration: 12
                  created_at: '2021-12-09T06:09:47.821Z'
                  updated_at: '2021-12-09T06:09:47.823Z'
                  course_image_url: https://res.cloudinary.com/starsheriff/image/upload/clhj00gfsq.jpeg
              schema:
                type: object
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                instructor:
                  type: string
                duration:
                  type: integer
                image:
                  type: binary
              required:
              - title
              - description
              - instructor
              - duration
              - image
        required: true
  "/api/v1/courses/{id}":
    get:
      summary: returns details for one course
      tags:
      - Courses
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: success
          content:
            application/json:
              example:
                id: 6
                title: Gaming
                description: Possimus incidunt molestiae. Ex quas dolor. Aspernatur
                  aut enim.
                instructor: Fr. Elba West
                duration: 1
                created_at: '2021-12-09T06:09:47.696Z'
                updated_at: '2021-12-09T06:09:47.723Z'
                course_image_url: https://res.cloudinary.com/starsheriff/image/upload/tq6bh5zbv0.jpeg
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  description:
                    type: string
                  instructor:
                    type: string
                  duration:
                    type: integer
                  created_at:
                    type: string
                  updated_at:
                    type: string
                  course_image_url:
                    type: string
                required:
                - id
                - title
                - description
                - instructor
                - duration
                - created_at
                - updated_at
                - course_image_url
  "/api/v1/sign_in":
    post:
      summary: creates a new session
      tags:
      - Sessions
      parameters: []
      responses:
        '200':
          description: success
          content:
            application/json:
              examples:
                when user exists:
                  value:
                    status: created
                    logged_in: true
                    user:
                      id: 5
                      username: vly4akl8jd
                      name: Lorraine
                      created_at: '2021-12-09T06:09:47.829Z'
                      updated_at: '2021-12-09T06:09:47.829Z'
                when user does not exist:
                  value:
                    status: 401
              schema:
                type: object
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
              required:
              - username
        required: true
  "/api/v1/signed_in":
    get:
      summary: return login status of user
      tags:
      - Sessions
      responses:
        '200':
          description: success
          content:
            application/json:
              examples:
                when user is logged in:
                  value:
                    logged_in: true
                    user:
                      id: 15
                      username: gwncm8oy55
                      name: Eduardo
                      created_at: '2021-12-09T06:09:47.852Z'
                      updated_at: '2021-12-09T06:09:47.852Z'
                when user is not logged in:
                  value:
                    logged_in: false
              schema:
                type: object
                properties:
                  logged_in:
                    type: boolean
                required:
                - logged_in
  "/api/v1/sign_out":
    delete:
      summary: return logged-out status of user as true
      tags:
      - Sessions
      responses:
        '200':
          description: success
          content:
            application/json:
              example:
                status: 200
                logged_out: true
              schema:
                type: object
                properties:
                  status:
                    type: integer
                  logged_out:
                    type: boolean
                required:
                - status
                - logged_out
  "/api/v1/users":
    post:
      summary: creates a new user
      tags:
      - Users
      parameters: []
      responses:
        '200':
          description: success
          content:
            application/json:
              examples:
                when user exists:
                  value:
                    status: created
                    logged_in: true
                    user:
                      id: 33
                      username: 9u16awtv77
                      name: Zachery
                      created_at: '2021-12-09T06:09:47.904Z'
                      updated_at: '2021-12-09T06:09:47.904Z'
                when user does not exist:
                  value:
                    status: 401
                    error: This username already exists. Please Choose another one.
              schema:
                type: object
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                username:
                  type: string
              required:
              - name
              - username
        required: true
servers:
- url: https://{defaultHost}
  variables:
    defaultHost:
      default: www.example.com
