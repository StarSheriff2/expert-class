---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/v1/cities":
    get:
      summary: returns a list of all cities
      tags:
      - Cities
      responses:
        '200':
          description: success
          content:
            application/json:
              example:
              - id: 1
                name: Sofia
                created_at: '2021-12-09T03:37:00.374Z'
                updated_at: '2021-12-09T03:37:00.374Z'
              - id: 2
                name: Mogadishu
                created_at: '2021-12-09T03:37:00.375Z'
                updated_at: '2021-12-09T03:37:00.375Z'
              - id: 3
                name: Taipei
                created_at: '2021-12-09T03:37:00.376Z'
                updated_at: '2021-12-09T03:37:00.376Z'
              - id: 4
                name: Praia Bangui
                created_at: '2021-12-09T03:37:00.377Z'
                updated_at: '2021-12-09T03:37:00.377Z'
              - id: 5
                name: Apia
                created_at: '2021-12-09T03:37:00.377Z'
                updated_at: '2021-12-09T03:37:00.377Z'
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    created_at:
                      type: string
                    updated_at:
                      type: string
                  required:
                  - id
                  - name
                  - created_at
                  - updated_at
  "/api/v1/courses":
    get:
      summary: returns list with all courses
      tags:
      - Courses
      responses:
        '200':
          description: success
          content:
            application/json:
              example:
              - id: 1
                title: Hunting
                description: Quos eius tenetur. Qui et laboriosam. Animi quam necessitatibus.
                instructor: Shanita Hartmann
                duration: 4
                created_at: '2021-12-09T03:37:00.427Z'
                updated_at: '2021-12-09T03:37:00.432Z'
                course_image_url: https://res.cloudinary.com/starsheriff/image/upload/qzgh1bzulx.jpeg
              - id: 2
                title: Motor sports
                description: Sit veniam pariatur. Aut eveniet sint. Repudiandae aut
                  labore.
                instructor: Rafael DuBuque
                duration: 11
                created_at: '2021-12-09T03:37:00.443Z'
                updated_at: '2021-12-09T03:37:00.446Z'
                course_image_url: https://res.cloudinary.com/starsheriff/image/upload/qzgh1bzulx.jpeg
              - id: 3
                title: Book restoration
                description: Vel ut et. Aut repudiandae impedit. Ipsum iusto quia.
                instructor: Sammy Wilkinson
                duration: 10
                created_at: '2021-12-09T03:37:00.451Z'
                updated_at: '2021-12-09T03:37:00.454Z'
                course_image_url: https://res.cloudinary.com/starsheriff/image/upload/qzgh1bzulx.jpeg
              - id: 4
                title: Gaming
                description: Autem quaerat architecto. Repellat cupiditate qui. Doloremque
                  aut fugiat.
                instructor: Pablo McCullough
                duration: 7
                created_at: '2021-12-09T03:37:00.459Z'
                updated_at: '2021-12-09T03:37:00.461Z'
                course_image_url: https://res.cloudinary.com/starsheriff/image/upload/qzgh1bzulx.jpeg
              - id: 5
                title: Drawing
                description: Modi est harum. Pariatur magnam aut. Aliquam et pariatur.
                instructor: Wally Conn Jr.
                duration: 3
                created_at: '2021-12-09T03:37:00.466Z'
                updated_at: '2021-12-09T03:37:00.468Z'
                course_image_url: https://res.cloudinary.com/starsheriff/image/upload/qzgh1bzulx.jpeg
              schema:
                type: array
  "/api/v1/sign_in":
    post:
      summary: creates a new session
      tags:
      - Sessions
      parameters: []
      responses:
        '200':
          description: success
          content:
            application/json:
              examples:
                when user exists:
                  value:
                    status: created
                    logged_in: true
                    user:
                      id: 3
                      username: dk2p6lqjzb
                      name: Craig
                      created_at: '2021-12-09T03:37:00.503Z'
                      updated_at: '2021-12-09T03:37:00.503Z'
                when user does not exist:
                  value:
                    status: 401
              schema:
                type: object
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
              required:
              - username
  "/api/v1/signed_in":
    get:
      summary: return login status of user
      tags:
      - Sessions
      responses:
        '200':
          description: success
          content:
            application/json:
              examples:
                when user is logged in:
                  value:
                    logged_in: true
                    user:
                      id: 13
                      username: jcq23vpdqw
                      name: Rafaela
                      created_at: '2021-12-09T03:37:00.562Z'
                      updated_at: '2021-12-09T03:37:00.562Z'
                when user is not logged in:
                  value:
                    logged_in: false
              schema:
                type: object
                properties:
                  logged_in:
                    type: boolean
                required:
                - logged_in
  "/api/v1/sign_out":
    delete:
      summary: return logged-out status of user as true
      tags:
      - Sessions
      responses:
        '200':
          description: success
          content:
            application/json:
              example:
                status: 200
                logged_out: true
              schema:
                type: object
                properties:
                  status:
                    type: integer
                  logged_out:
                    type: boolean
                required:
                - status
                - logged_out
  "/api/v1/users":
    post:
      summary: creates a new user
      tags:
      - Users
      parameters: []
      responses:
        '200':
          description: success
          content:
            application/json:
              examples:
                when user exists:
                  value:
                    status: created
                    logged_in: true
                    user:
                      id: 31
                      username: bvvad9f4tj
                      name: Esta
                      created_at: '2021-12-09T03:37:00.618Z'
                      updated_at: '2021-12-09T03:37:00.618Z'
                when user does not exist:
                  value:
                    status: 401
                    error: This username already exists. Please Choose another one.
              schema:
                type: object
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                username:
                  type: string
              required:
              - name
              - username
servers:
- url: https://{defaultHost}
  variables:
    defaultHost:
      default: www.example.com
