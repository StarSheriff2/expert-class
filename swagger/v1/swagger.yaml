---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/v1/cities":
    get:
      summary: returns a list of all cities
      tags:
      - Cities
      responses:
        '200':
          description: success
          content:
            application/json:
              example:
              - id: 1
                name: Maseru
                created_at: '2021-12-09T04:33:12.843Z'
                updated_at: '2021-12-09T04:33:12.843Z'
              - id: 2
                name: Brazzaville
                created_at: '2021-12-09T04:33:12.844Z'
                updated_at: '2021-12-09T04:33:12.844Z'
              - id: 3
                name: Melekeok
                created_at: '2021-12-09T04:33:12.845Z'
                updated_at: '2021-12-09T04:33:12.845Z'
              - id: 4
                name: Andorra la Vella
                created_at: '2021-12-09T04:33:12.845Z'
                updated_at: '2021-12-09T04:33:12.845Z'
              - id: 5
                name: Colombo
                created_at: '2021-12-09T04:33:12.846Z'
                updated_at: '2021-12-09T04:33:12.846Z'
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    created_at:
                      type: string
                    updated_at:
                      type: string
                  required:
                  - id
                  - name
                  - created_at
                  - updated_at
  "/api/v1/courses":
    get:
      summary: returns list with all courses
      tags:
      - Courses
      responses:
        '200':
          description: success
          content:
            application/json:
              example:
              - id: 1
                title: Foraging
                description: Corporis exercitationem dolor. Ut in assumenda. Quis
                  necessitatibus quo.
                instructor: Iola Walker
                duration: 3
                created_at: '2021-12-09T04:33:12.895Z'
                updated_at: '2021-12-09T04:33:12.901Z'
                course_image_url: https://res.cloudinary.com/starsheriff/image/upload/t5acnq303c.jpeg
              - id: 2
                title: Skimboarding
                description: Quibusdam quos magnam. Non omnis ab. Dignissimos quam
                  amet.
                instructor: Dominique Wiza I
                duration: 3
                created_at: '2021-12-09T04:33:12.907Z'
                updated_at: '2021-12-09T04:33:12.910Z'
                course_image_url: https://res.cloudinary.com/starsheriff/image/upload/h9069bgnim.jpeg
              - id: 3
                title: Rafting
                description: Tenetur ut et. Dolorum aut sed. Aut provident sed.
                instructor: Rep. Esther Kertzmann
                duration: 5
                created_at: '2021-12-09T04:33:12.915Z'
                updated_at: '2021-12-09T04:33:12.918Z'
                course_image_url: https://res.cloudinary.com/starsheriff/image/upload/dsr2anzl1p.jpeg
              - id: 4
                title: Acting
                description: Repellendus beatae ut. Ex enim error. Laboriosam accusamus
                  dolore.
                instructor: Adolfo West
                duration: 11
                created_at: '2021-12-09T04:33:12.922Z'
                updated_at: '2021-12-09T04:33:12.924Z'
                course_image_url: https://res.cloudinary.com/starsheriff/image/upload/y3hfjuzs39.jpeg
              - id: 5
                title: Flying disc
                description: Commodi adipisci delectus. Quis ea similique. Voluptatum
                  earum inventore.
                instructor: Hayley Reilly
                duration: 10
                created_at: '2021-12-09T04:33:12.932Z'
                updated_at: '2021-12-09T04:33:12.935Z'
                course_image_url: https://res.cloudinary.com/starsheriff/image/upload/cg0l9r7d07.jpeg
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    title:
                      type: string
                    description:
                      type: string
                    instructor:
                      type: string
                    duration:
                      type: integer
                    created_at:
                      type: string
                    updated_at:
                      type: string
                    course_image_url:
                      type: string
                  required:
                  - id
                  - title
                  - description
                  - instructor
                  - duration
                  - created_at
                  - updated_at
                  - course_image_url
                required: true
  "/api/v1/sign_in":
    post:
      summary: creates a new session
      tags:
      - Sessions
      parameters: []
      responses:
        '200':
          description: success
          content:
            application/json:
              examples:
                when user exists:
                  value:
                    status: created
                    logged_in: true
                    user:
                      id: 3
                      username: 83dc6oh3wu
                      name: Silas
                      created_at: '2021-12-09T04:33:12.976Z'
                      updated_at: '2021-12-09T04:33:12.976Z'
                when user does not exist:
                  value:
                    status: 401
              schema:
                type: object
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
              required:
              - username
  "/api/v1/signed_in":
    get:
      summary: return login status of user
      tags:
      - Sessions
      responses:
        '200':
          description: success
          content:
            application/json:
              examples:
                when user is logged in:
                  value:
                    logged_in: true
                    user:
                      id: 13
                      username: q089bj7onj
                      name: Rickey
                      created_at: '2021-12-09T04:33:13.030Z'
                      updated_at: '2021-12-09T04:33:13.030Z'
                when user is not logged in:
                  value:
                    logged_in: false
              schema:
                type: object
                properties:
                  logged_in:
                    type: boolean
                required:
                - logged_in
  "/api/v1/sign_out":
    delete:
      summary: return logged-out status of user as true
      tags:
      - Sessions
      responses:
        '200':
          description: success
          content:
            application/json:
              example:
                status: 200
                logged_out: true
              schema:
                type: object
                properties:
                  status:
                    type: integer
                  logged_out:
                    type: boolean
                required:
                - status
                - logged_out
  "/api/v1/users":
    post:
      summary: creates a new user
      tags:
      - Users
      parameters: []
      responses:
        '200':
          description: success
          content:
            application/json:
              examples:
                when user exists:
                  value:
                    status: created
                    logged_in: true
                    user:
                      id: 31
                      username: 2txku6y1gi
                      name: Harland
                      created_at: '2021-12-09T04:33:13.092Z'
                      updated_at: '2021-12-09T04:33:13.092Z'
                when user does not exist:
                  value:
                    status: 401
                    error: This username already exists. Please Choose another one.
              schema:
                type: object
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                username:
                  type: string
              required:
              - name
              - username
servers:
- url: https://{defaultHost}
  variables:
    defaultHost:
      default: www.example.com
